{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/email-input/email-input.component.ts","webpack:///src/app/email-input/email-input.component.html","webpack:///src/app/password-input-component/password-input-component.component.ts","webpack:///src/app/password-input-component/password-input-component.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","formBuilder","form","group","email","required","password","minLength","checkboxRemember","localStorage","length","patchValue","atob","getItem","get","value","setItem","btoa","clear","valid","userData","alert","submitForm","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EmailInputComponent","controlContainer","label","onChange","onTouch","fn","val","updatelabel","control","hasError","provide","useExisting","multi","updateValue","PasswordInputComponentComponent","updateLabel","event","type","target","checked","showPass","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(private readonly formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]],\n      checkboxRemember: false,\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.length != 0) {\n      this.form.patchValue({\n        email: atob(localStorage.getItem(\"email\")),\n        password: atob(localStorage.getItem(\"password\"))\n      })\n    }\n  }\n  \n  submitForm() {\n    if (this.form.get(\"checkboxRemember\").value === true) {\n      localStorage.setItem(\"email\", btoa(this.form.get(\"email\").value));\n      localStorage.setItem(\"password\", btoa(this.form.get(\"password\").value));\n    } else {\n      localStorage.clear();\n    }\n\n    if (this.form.valid) {\n      const userData: string = `Email: ${this.form.get(\"email\").value} | Password: ${this.form.get(\"password\").value}`;\n      alert(userData);\n    } else {\n      alert('There is a problem with the form');\n    }\n  }\n}\n","<form class=\"container\" [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n  <app-email-input formControlName=\"email\"></app-email-input>\n  <app-password-input-component formControlName=\"password\"></app-password-input-component>\n  <th class=\"check-remember\">\n    <label>Remember Me</label>\n    <input type=\"checkbox\" formControlName=\"checkboxRemember\" />\n  </th>\n  <br />\n  <button class=\"button-submit\" [disabled]=\"!form.valid\" type=\"submit\">\n    Submit\n  </button>\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PasswordInputComponentComponent } from './password-input-component/password-input-component.component';\nimport { EmailInputComponent } from './email-input/email-input.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PasswordInputComponentComponent,\n    EmailInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, forwardRef} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-email-input',\n  templateUrl: './email-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => EmailInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class EmailInputComponent implements ControlValueAccessor {\n  constructor(public controlContainer: ControlContainer) { }\n\n  label: string = 'Email:';\n  value: string;\n  onChange = (value: any) => { };\n  onTouch = () => { };\n\n  writeValue(value) {\n    this.value = value\n  };\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  };\n\n  registerOnTouched(fn: any) {\n    this.onTouch = fn;\n  };\n\n  updateValue(val) {\n    this.value = val;\n    this.onChange(val);\n    this.onTouch();\n    this.updatelabel()\n  }\n\n  updatelabel() {\n    this.label = this.controlContainer.control.get(\"email\").hasError('email') ?\n      'Not a valid!' :\n      'Email:';\n  }\n}\n","<label for=\"email\">{{ label }}</label>\n<br />\n<input\n  [(ngModel)]=\"value\"\n  (ngModelChange)=\"updateValue($event)\"\n  type=\"email\"\n  name=\"email\"\n  placeholder=\"Email\"\n/>\n","import { Component, forwardRef } from \"@angular/core\";\nimport {\n  ControlContainer,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-password-input-component\",\n  templateUrl: \"./password-input-component.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PasswordInputComponentComponent),\n      multi: true,\n    },\n  ],\n})\nexport class PasswordInputComponentComponent implements ControlValueAccessor {\n  constructor(public controlContainer: ControlContainer) {}\n  label: string;\n  value: string;\n  type: \"password\" | \"text\";\n  onChange = (value: any) => {};\n  onTouch = () => {};\n\n  writeValue(value) {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouch = fn;\n  }\n\n  updateValue(val) {\n    this.value = val;\n    this.onChange(val);\n    this.onTouch();\n    this.updateLabel();\n  }\n\n  showPass(event) {\n    this.type = event.target.checked ? \"text\" : \"password\";\n  }\n\n  updateLabel() {\n    this.label = this.controlContainer.control.get(\"password\").hasError(\"minlength\") ?\n      \"Min 6 lenght!\":\n      \"Password:\";\n  }\n}\n","<label for=\"password\">{{ label }}</label>\n<br />\n<input\n  placeholder=\"Enter password\"\n  name=\"password\"\n  [(ngModel)]=\"value\"\n  (ngModelChange)=\"updateValue($event)\"\n  [type]=\"type\"\n/>\n<input type=\"checkbox\" (change)=\"showPass($event)\" />\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}